{"version":3,"sources":["components/PDF/PDF.js","actions/types.js","api/fileUpload.js","api/fileClose.js","actions/fileActions.js","actions/modalsActions.js","actions/index.js","actions/topNavigation.js","components/Modals/ModalTemplate.js","components/localData.js","components/Modals/NewHeaders/utils/spaceLines.js","components/Modals/NewHeaders/utils/findHeaderById.js","components/Modals/NewHeaders/utils/createBlankHeader.js","components/Modals/NewHeaders/utils/getHeadersFromTocText.js","components/Modals/NewHeaders/TocTab/TocTab.js","components/Modals/NewHeaders/utils/compareArrays.js","components/Modals/NewHeaders/Header/HeaderLine/HeaderLine.js","components/Modals/NewHeaders/Header/Header.js","components/Modals/NewHeaders/HeadersMenu/HeadersMenu.js","components/Modals/NewHeaders/PositiveButtons/PositiveButtons.js","components/Modals/NewHeaders/NegativeButtons/NegativeButtons.js","api/sendHeadersToBackend.js","components/Modals/NewHeaders/NewHeaders.js","api/sendPageNumbersToBackend.js","components/Modals/PageNumbers/PageNumbers.js","components/Modals/Modals.js","components/Loading/Loading.js","components/TopNavigation/Dropdown/utils.js","components/TopNavigation/Dropdown/Dropdown.js","components/TopNavigation/utils/fileUtils.js","components/TopNavigation/localData.js","components/TopNavigation/utils/addStateToLocalData.js","components/TopNavigation/TopNavigation.js","components/utils.js","components/App.js","rootReducer/file.js","rootReducer/headers.js","rootReducer/topNavigation.js","rootReducer/modals.js","rootReducer/index.js","index.js"],"names":["connect","state","file","topNavigation","openDropdown","name","blob","zIndex","Object","keys","length","src","title","frameBorder","style","overflow","height","width","position","left","transform","fileTypes","topNavigationTypes","modalTypes","a","formData","FormData","append","config","method","url","headers","data","responseType","axios","res","status","pageCount","fileName","filePath","metadata","fileUpload","fileClose","actions","closeFile","dispatch","then","payload","type","disableApp","enableApp","changeBlob","uploadFile","undefined","loading","changeFilePath","newFilePath","changeMetadata","newMetadata","expandModal","closeModal","fileActions","expandDropdown","closeDropdown","modalsActions","ModalContainer","styled","div","HundoPercent","modals","props","openModal","Body","className","aria-label","onClick","MAX_CHARS_PER_HEADER_LINE","dontEndOn","obj","stringNotToEndOn","text","strLen","indexOfStr","lastIndexOf","newText","slice","maxChars","customSlice","lastSpace","spaceLines","header","removeSpace","lines","forEach","line","trim","newLines","tempText","numberOfLines","Math","ceil","i","push","slicedObj","createLines","findHeaderById","idNumber","foundIndex","index","createBlankHeader","startPage","endPage","startPageValue","String","endPageValue","random","ellipse","removeNewLines","replace","removeSpaces","romans","getHeadersFromTocText","tocText","regex","removeTableOfContents","roman","romanLen","toLowerCase","RegExp","search","sliced","indexOfRoman","first","second","removeRomanNumerals","headersAndPageNumbers","split","str","trimmed","regex2","split2","pageNumbers","Number","whiteSpace","indexOf","pn","suspectedPageNumber","findPageNumberInSlice","saferSplit","syncEllipses","originalText","isGood","formatted","removeEllipses","pageNumber","tempStr","check","map","createHeaders","TableOfContentsTextArea","textarea","TocTab","changeTocString","addTocHeaders","Fragment","htmlFor","value","onChange","e","compareArrays","arr1","arr2","equal","currLine","Input","input","InputContainer","Xbutton","button","HeaderLine","updateLines","addLine","removeLine","React","useState","focused","setFocused","randID","floor","target","onKeyDown","keyCode","selectionStart","onMouseEnter","document","getElementById","focus","onFocus","onBlur","relatedTarget","id","TopHeader","HeaderContainer","Header","removing","inserting","removeHeader","updateHeader","addForDeletion","addForInsertion","removeForDeletion","markedForDeletion","markedForInsertion","removeForInsertion","isMarkedForRemoval","includes","isMarkedForInsertion","linesValue","setLinesValue","checkedForRemoval","setCheckedForRemoval","checkedForInsertion","setCheckedForInsertion","useEffect","newHeader","updatePageRange","splice","beforeEnter","afterEnter","toggleRemovalCheck","toggleInsertionCheck","checked","marginLeft","HeadersMenu","setTab","tab","role","aria-selected","aria-controls","Container","FlexColumn","CheckAndX","InsertButtons","toggleInserting","insertHeadersIntoPositions","PositiveButtons","addHeader","spaceHeaders","applyHeaders","addPageRanges","RemoveButtons","toggleRemoving","removeMarkedForDeletion","NegativeButtons","clearHeaders","removeBlankLines","removePageRanges","removeBlankHeaders","filtered","filter","checkPageRange","dictionary","JSON","stringify","post","newBlob","sendHeadersToBackend","section","setHeaders","setTocText","setRemoving","setInserting","setMarkedForDeletion","setMarkedForInsertion","newHeaders","found","newMarked","marked","URL","createObjectURL","findLastLineWithText","calculateEndPage","concat","headerElements","Array","from","querySelectorAll","scrollIntoView","pageRange","lastLineIndex","lineBeforeLast","indexOfPosition","newLine","tocHeaders","option","range","sendPageNumbersToBackend","Outcome","CenterTextInput","OutcomeLabel","label","MultipleInputs","PageRangeContainer","RadioContainer","RangeContainer","Range","PageRangeInputs","setStartPage","setEndPage","min","setText","outcome","setOutcome","startingPage","setStartingPage","setOption","changeOutcome","startPageHelper","newValue","replaced","onOptionChange","newStartPage","applyPageNumbers","disabled","displayModal","NewHeaders","PageNumbers","Text","p","Hidden","Loading","pointerEvents","utils","closeAllDropdowns","details","TIME_TO_CLOSE","detail","setTimeout","removeAttribute","closeDropdownsAfterAnotherOpened","classList","items","location","item","buttonClick","stopPropagation","createFileObject","key","fileUtils","openFile","createElement","setAttribute","addEventListener","files","fileObject","click","closeOpenedFile","localData","documentObject","addStateToLocalData","newState","modalState","display","closeTopNavigation","classInSearch","tagName","parentNode","dropdownUtility","Main","main","initialState","fileReducer","action","headerReducer","topNavigationReducer","modalsReducer","expansion","expansionData","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.176cf219.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/**\r\n * Styled Component with iframe not taking.\r\n * Just use inline styles for now.\r\n\r\n * If we click the iframe while a dropdown menu is open,\r\n * it would normally not close the menu. This allows\r\n * us to close the menu.\r\n */\r\nfunction PDF({ file, topNavigation }) {\r\n  // Redux Store Properties\r\n  const { openDropdown } = topNavigation;\r\n  const { name = \"\", blob } = file;\r\n\r\n  // Misc\r\n  // Assists in making clickable when we have a Dropdown open in the TopNavigation.\r\n  const zIndex = openDropdown === \"\" ? \"auto\" : \"-1\";\r\n\r\n  // Whether or not we display a PDF, depending if our file is open or not.\r\n  const display = Object.keys(file) > 0 || name.length > 0 ? true : false;\r\n\r\n  return (\r\n    display && (\r\n      <iframe\r\n        src={blob}\r\n        title={name}\r\n        frameBorder=\"0\"\r\n        style={{\r\n          zIndex,\r\n          overflow: \"hidden\",\r\n          height: \"98vh\",\r\n          width: \"60%\",\r\n          position: \"absolute\",\r\n          left: \"50%\",\r\n          transform: \"translateX(-50%)\",\r\n        }}\r\n      ></iframe>\r\n    )\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { file } = state;\r\n  const { topNavigation } = state;\r\n  return {\r\n    file,\r\n    topNavigation,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PDF);\r\n","// File types\r\nconst ENABLED_APP = \"ENABLED_APP\";\r\nconst CLOSED_FILE = \"CLOSED_FILE\";\r\nconst DISABLED_APP = \"DISABLED_APP\";\r\nconst CHANGED_BLOB = \"CHANGED_BLOB\";\r\nconst UPLOADED_FILE = \"UPLOADED_FILE\";\r\nconst CHANGED_METADATA = \"CHANGED_METADATA\";\r\nconst CHANGED_FILE_PATH = \"CHANGED_FILE_PATH\";\r\n\r\nexport const fileTypes = {\r\n  ENABLED_APP,\r\n  CLOSED_FILE,\r\n  DISABLED_APP,\r\n  CHANGED_BLOB,\r\n  UPLOADED_FILE,\r\n  CHANGED_METADATA,\r\n  CHANGED_FILE_PATH,\r\n};\r\n\r\n// Top Navigation\r\nconst CLOSED_DROPDOWN = \"CLOSED_DROPDOWN\";\r\nconst EXPANDED_DROPDOWN = \"EXPANDED_DROPDOWN\";\r\n\r\nexport const topNavigationTypes = {\r\n  CLOSED_DROPDOWN,\r\n  EXPANDED_DROPDOWN,\r\n};\r\n\r\n// Modals\r\nconst CLOSED_MODAL = \"CLOSED_MODAL\";\r\nconst EXPANDED_MODAL = \"EXPANDED_MODAL\";\r\nconst CLOSED_MODAL_EXPANSION = \"CLOSED_MODAL_EXPANSION\";\r\nconst EXPANDED_MODAL_EXPANSION = \"OPENED_MODAL_EXPANSION\";\r\n\r\nexport const modalTypes = {\r\n  CLOSED_MODAL,\r\n  EXPANDED_MODAL,\r\n  CLOSED_MODAL_EXPANSION,\r\n  EXPANDED_MODAL_EXPANSION,\r\n};\r\n","import axios from \"axios\";\r\n\r\nasync function fileUpload(file) {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n\r\n  const config = {\r\n    method: \"POST\",\r\n    url: \"upload\",\r\n    headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n    data: formData,\r\n    responseType: \"blob\",\r\n  };\r\n\r\n  try {\r\n    const res = await axios(config);\r\n    if (res.status === 200) {\r\n      const { data } = res;\r\n      const { headers } = res;\r\n      const pageCount = headers[\"x-pagecount\"];\r\n      const fileName = headers[\"x-filename\"];\r\n      const filePath = headers[\"x-filepath\"];\r\n      const metadata = headers[\"x-metadata\"];\r\n      return {\r\n        ...data,\r\n        pageCount,\r\n        fileName,\r\n        filePath,\r\n        metadata,\r\n      };\r\n    }\r\n  } catch (err) {\r\n    return;\r\n  }\r\n}\r\n\r\nexport default fileUpload;\r\n","import axios from \"axios\";\r\n\r\nasync function fileClose() {\r\n  const config = {\r\n    method: \"PUT\",\r\n    url: \"upload\",\r\n    headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n  };\r\n\r\n  try {\r\n    const res = await axios(config);\r\n    if (res.status === 200) {\r\n      const { data } = res;\r\n      return data;\r\n    }\r\n  } catch (err) {\r\n    return;\r\n  }\r\n}\r\n\r\nexport default fileClose;\r\n","import { fileTypes } from \"./types\";\r\n\r\nimport fileUpload from \"../api/fileUpload\";\r\nimport fileClose from \"../api/fileClose\";\r\n\r\nfunction uploadFile(payload) {\r\n  return async function (dispatch) {\r\n    return fileUpload(payload.file).then((res) => {\r\n      if (res !== undefined) {\r\n        dispatch({\r\n          payload: { ...payload, ...res, loading: false },\r\n          type: fileTypes.UPLOADED_FILE,\r\n        });\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction closeFile() {\r\n  return async function (dispatch) {\r\n    return fileClose().then(() => {\r\n      dispatch({\r\n        payload: {},\r\n        type: fileTypes.CLOSED_FILE,\r\n      });\r\n    });\r\n  };\r\n}\r\n\r\nfunction changeBlob(blob) {\r\n  return (dispatch) =>\r\n    dispatch({\r\n      payload: blob,\r\n      type: fileTypes.CHANGED_BLOB,\r\n    });\r\n}\r\n\r\nfunction disableApp() {\r\n  return (dispatch) =>\r\n    dispatch({\r\n      type: fileTypes.DISABLED_APP,\r\n    });\r\n}\r\n\r\nfunction enableApp() {\r\n  return (dispatch) =>\r\n    dispatch({\r\n      type: fileTypes.ENABLED_APP,\r\n    });\r\n}\r\n\r\nfunction changeFilePath(newFilePath) {\r\n  return (dispatch) =>\r\n    dispatch({\r\n      type: fileTypes.CHANGED_FILE_PATH,\r\n      payload: newFilePath,\r\n    });\r\n}\r\n\r\nfunction changeMetadata(newMetadata) {\r\n  return (dispatch) =>\r\n    dispatch({\r\n      type: fileTypes.CHANGED_METADATA,\r\n      payload: newMetadata,\r\n    });\r\n}\r\n\r\nconst actions = {\r\n  closeFile,\r\n  disableApp,\r\n  enableApp,\r\n  changeBlob,\r\n  uploadFile,\r\n  changeFilePath,\r\n  changeMetadata,\r\n};\r\n\r\nexport default actions;\r\n","import { modalTypes } from \"./types\";\r\n\r\nfunction expandModal(payload) {\r\n  return (dispatch) =>\r\n    dispatch({\r\n      payload,\r\n      type: modalTypes.EXPANDED_MODAL,\r\n    });\r\n}\r\n\r\nfunction closeModal() {\r\n  return (dispatch) =>\r\n    dispatch({\r\n      type: modalTypes.CLOSED_MODAL,\r\n    });\r\n}\r\n\r\nconst actions = {\r\n  expandModal,\r\n  closeModal,\r\n};\r\n\r\nexport default actions;\r\n","import fileActions from \"./fileActions\";\r\nimport topNavigation from \"./topNavigation\";\r\nimport modalsActions from \"./modalsActions\";\r\n\r\nconst actions = {\r\n  fileActions,\r\n  topNavigation,\r\n  modalsActions,\r\n};\r\n\r\nexport default actions;\r\n","import { topNavigationTypes } from \"./types\";\r\n\r\nfunction expandDropdown(payload) {\r\n  return (dispatch) =>\r\n    dispatch({\r\n      payload,\r\n      type: topNavigationTypes.EXPANDED_DROPDOWN,\r\n    });\r\n}\r\n\r\nfunction closeDropdown() {\r\n  return (dispatch) =>\r\n    dispatch({\r\n      type: topNavigationTypes.CLOSED_DROPDOWN,\r\n    });\r\n}\r\n\r\nconst actions = {\r\n  expandDropdown,\r\n  closeDropdown,\r\n};\r\n\r\nexport default actions;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport actions from \"../../actions\";\r\n\r\nconst ModalContainer = styled.div`\r\n  left: 0;\r\n  right: 0;\r\n  width: 60vw;\r\n  z-index: 10;\r\n  margin: 0 auto;\r\n  position: absolute;\r\n`;\r\n\r\nconst HundoPercent = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nfunction ModalTemplate(props) {\r\n  // Redux Actions\r\n  const { closeModal } = props;\r\n\r\n  // Redux Store Properties\r\n  const { modals } = props;\r\n  const { openModal } = modals;\r\n\r\n  // Local Properties\r\n  const { Body } = props;\r\n\r\n  return (\r\n    <ModalContainer>\r\n      <HundoPercent>\r\n        <div className=\"window\">\r\n          <div className=\"title-bar\">\r\n            <div className=\"title-bar-text\">{openModal}</div>\r\n            <div className=\"title-bar-controls\">\r\n              {/* <button aria-label=\"Minimize\"></button> */}\r\n              {/* <button aria-label=\"Maximize\"></button> */}\r\n              <button aria-label=\"Close\" onClick={() => closeModal()}></button>\r\n            </div>\r\n          </div>\r\n          <div className=\"window-body\">\r\n            <Body />\r\n          </div>\r\n        </div>\r\n      </HundoPercent>\r\n    </ModalContainer>\r\n  );\r\n}\r\n\r\nconst { modalsActions } = actions;\r\nconst { closeModal } = modalsActions;\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { modals } = state;\r\n  return {\r\n    modals,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { closeModal })(ModalTemplate);\r\n","export const TIME_TO_CLOSE_DROPDOWN = 10;\r\n\r\nexport const HEADER_INPUT_DELAY = 400;\r\n\r\nexport const MAX_CHARS_PER_HEADER_LINE = 90;\r\n","import { MAX_CHARS_PER_HEADER_LINE } from \"../../../localData\";\r\n\r\n/**\r\n * @param {Object} header - Header object.\r\n * @param {Boolean} removeSpace - Whether or not we are adding or removing the spaces.\r\n * @returns Object - Same header object with the lines either spaced or unspaced.\r\n */\r\nfunction spaceLines(header, removeSpace) {\r\n  const { lines } = header;\r\n  let text = \"\";\r\n  lines.forEach((line) => {\r\n    text = text + \" \" + line;\r\n  });\r\n\r\n  if (removeSpace) {\r\n    const newHeader = {\r\n      ...header,\r\n      lines: [text.trim()],\r\n    };\r\n    return newHeader;\r\n  } else {\r\n    const newLines = createLines(text);\r\n    const newHeader = {\r\n      ...header,\r\n      lines: newLines,\r\n    };\r\n\r\n    return newHeader;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {String} text - Current text of the header.\r\n * @returns Array of the split text.\r\n *\r\n * If the text is less than or equal to our max characters, just add it.\r\n * Otherwise, slice to the max characters and make sure we don't\r\n * end on specific things.\r\n */\r\nfunction createLines(text) {\r\n  let tempText = text;\r\n  let maxChars = MAX_CHARS_PER_HEADER_LINE;\r\n  const lines = [];\r\n  const numberOfLines = Math.ceil(text.length / MAX_CHARS_PER_HEADER_LINE);\r\n  for (let i = 0; i < numberOfLines; i++) {\r\n    if (tempText.length <= MAX_CHARS_PER_HEADER_LINE) {\r\n      lines.push(tempText.trim());\r\n    } else {\r\n      // Slice until max lines.\r\n      let slicedObj = customSlice(tempText, maxChars);\r\n\r\n      // Don't end on \"dated\"\r\n      slicedObj = dontEndOn(slicedObj, \"dated\");\r\n\r\n      lines.push(slicedObj.text.trim());\r\n      maxChars = slicedObj.maxChars;\r\n      tempText = tempText.slice(maxChars, tempText.length);\r\n    }\r\n  }\r\n\r\n  return lines;\r\n}\r\n\r\n/**\r\n * @param {Object} obj - text, maxChars\r\n * @param {String} stringNotToEndOn - what we don't want to end with.\r\n * @returns new sliced object.\r\n *\r\n * Find the index of the string we don't want to end on.\r\n * Calculate what the last word is using the length of the\r\n * string we don't want to end on. Then compare them.\r\n */\r\nfunction dontEndOn(obj, stringNotToEndOn) {\r\n  const { text } = obj;\r\n  const strLen = stringNotToEndOn.length;\r\n  const indexOfStr = text.lastIndexOf(stringNotToEndOn);\r\n  const calculatedIndexOfStr = text.length - strLen;\r\n  if (indexOfStr === calculatedIndexOfStr) {\r\n    const newText = text.slice(0, indexOfStr);\r\n    const newTextLen = newText.length;\r\n    return {\r\n      text: newText,\r\n      maxChars: newTextLen,\r\n    };\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * @param {String} text - String we are slicing.\r\n * @param {Number} maxChars - Number of maximum characters.\r\n * @returns sliced object.\r\n *\r\n * Slice up until max characters but also do not separate\r\n * any words.\r\n */\r\nfunction customSlice(text, maxChars) {\r\n  const sliced = text.slice(0, maxChars);\r\n  const lastSpace = sliced.lastIndexOf(\" \");\r\n  const newText = text.slice(0, lastSpace);\r\n  const newTextLen = newText.length;\r\n  return {\r\n    text: newText,\r\n    maxChars: newTextLen,\r\n  };\r\n}\r\n\r\nexport default spaceLines;\r\n","/**\r\n * @param {String} idNumber - id of the header we are trying to find.\r\n * @param {Array} headers - Current headers state.\r\n * @returns Number of index, -1 if not found.\r\n */\r\nfunction findHeaderById(idNumber, headers) {\r\n  let foundIndex = -1;\r\n  headers.forEach((header, index) => {\r\n    if (header.idNumber === idNumber) {\r\n      foundIndex = index;\r\n      return index;\r\n    }\r\n  });\r\n  return foundIndex;\r\n}\r\n\r\nexport default findHeaderById;\r\n","/**\r\n * @param {Array} headers - Current headers.\r\n * @param {String} text - Header text.\r\n * @param {String} startPage - Header starting page.\r\n * @param {String} endPage - Header ending page.\r\n * @returns new header object.\r\n *\r\n * We use the headers to determine the index.\r\n * If a page range was not given, we use the header to also\r\n * assign a page range.\r\n */\r\nfunction createBlankHeader(\r\n  headers,\r\n  text = \"\",\r\n  startPage = \"-1\",\r\n  endPage = \"-1\"\r\n) {\r\n  const startPageValue =\r\n    startPage !== \"-1\" ? startPage : String(headers.length + 1);\r\n  const endPageValue = endPage !== \"-1\" ? endPage : String(headers.length + 1);\r\n  return {\r\n    // text,\r\n    startPage: startPageValue,\r\n    endPage: endPageValue,\r\n    index: headers.length,\r\n    idNumber: Math.ceil(Math.random() * 1000000),\r\n    // updatedFromExpansion: false,\r\n    lines: [text],\r\n  };\r\n}\r\n\r\nexport default createBlankHeader;\r\n","import createBlankHeader from \"./createBlankHeader\";\r\n\r\n// If we ever change this value,\r\n// make sure we also change it in the safer split regex.\r\nconst ellipse = \"CODE<<ELLIPSE>>CODE\";\r\n\r\n/**\r\n * @param {String} tocText - Table of Contents String.\r\n * @param {Array} headers - Our current headers.\r\n * @returns\r\n *\r\n * Do a couple of removals from the text to get it in sync.\r\n * We then do a safe split to get the text and the numbers.\r\n *\r\n * Check headers, if they are good return them.\r\n */\r\nfunction getHeadersFromTocText(tocText, headers) {\r\n  let tempText = removeTableOfContents(tocText);\r\n  tempText = removeRomanNumerals(tempText);\r\n  tempText = removeNewLines(tempText);\r\n  tempText = syncEllipses(tempText);\r\n\r\n  const headersAndPageNumbers = saferSplit(tempText, tocText);\r\n  const headersAreGood = check(headersAndPageNumbers, tocText);\r\n\r\n  if (headersAreGood) {\r\n    const newHeaders = createHeaders(headersAndPageNumbers, headers);\r\n    return newHeaders;\r\n  } else {\r\n    return headers;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Object} headersAndPageNumbers - text and page numbers.\r\n * @param {String} originalText - Our original uploaded string.\r\n * @returns boolean - Whether or not our headers are good.\r\n *\r\n * We squish our original text together to ensure\r\n * that our header exists.\r\n *\r\n * We squish our header and respected page number together\r\n * then check if the header/pagenumber are in the squished\r\n * text.\r\n */\r\nfunction check(headersAndPageNumbers, originalText) {\r\n  let isGood = true;\r\n  const { pageNumbers, text } = headersAndPageNumbers;\r\n  if (pageNumbers.length !== text.length) {\r\n    return false;\r\n  }\r\n\r\n  let formatted = originalText;\r\n  formatted = removeNewLines(formatted);\r\n  formatted = removeSpaces(formatted);\r\n  formatted = removeEllipses(formatted);\r\n\r\n  // Remove ellipses and newlines and spaces altogether.\r\n  text.forEach((str, index) => {\r\n    const pageNumber = pageNumbers[index];\r\n    let tempStr = removeSpaces(str);\r\n    tempStr = tempStr + pageNumber;\r\n    const indexOfStr = formatted.indexOf(tempStr);\r\n    if (indexOfStr === -1) {\r\n      isGood = false;\r\n      return;\r\n    }\r\n  });\r\n\r\n  return isGood;\r\n}\r\n\r\n/**\r\n * @param {String} tocText - Uploaded Table of Contents string.\r\n * @returns object with headers and page numbers.\r\n *\r\n * First we split to find the headers.\r\n * Then we split to find the page numbers.\r\n */\r\nfunction saferSplit(tocText) {\r\n  const regex = new RegExp(`${ellipse}\\\\s+\\\\d+`, \"gi\");\r\n\r\n  const split = tocText.split(regex);\r\n\r\n  let text = [];\r\n\r\n  split.forEach((str) => {\r\n    const trimmed = str.trim();\r\n    if (trimmed.length > 0) {\r\n      text.push(trimmed);\r\n    }\r\n  });\r\n\r\n  const regex2 = new RegExp(`${ellipse}\\\\s+?`, \"gi\");\r\n  const split2 = tocText.split(regex2);\r\n\r\n  let pageNumbers = [];\r\n  split2.forEach((str, index) => {\r\n    if (index !== 0) {\r\n      const trimmed = str.trim();\r\n      if (Number(trimmed)) {\r\n        // For the last entry. There is nothing afterwards.\r\n        pageNumbers.push(trimmed);\r\n      } else {\r\n        // Get the first white space\r\n        // Check if thats a number.\r\n        const whiteSpace = trimmed.indexOf(\" \");\r\n        const sliced = trimmed.slice(0, whiteSpace);\r\n        if (Number(sliced)) {\r\n          // Example: 10 Exhibit A-\r\n          pageNumbers.push(sliced);\r\n        } else {\r\n          const pn = findPageNumberInSlice(sliced);\r\n          if (pn !== -1) {\r\n            pageNumbers.push(pn);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return {\r\n    text,\r\n    pageNumbers,\r\n  };\r\n}\r\n\r\n/**\r\n * @param {String} text\r\n * @returns String or Number depending on our results.\r\n *\r\n * If we remove too much near a number\r\n * it combines the page number and the next header\r\n * and doesn't really show in the textarea.\r\n */\r\nfunction findPageNumberInSlice(text) {\r\n  const regex = /\\D+/;\r\n  const split = text.split(regex);\r\n  const suspectedPageNumber = split[0];\r\n\r\n  if (Number(suspectedPageNumber)) {\r\n    return suspectedPageNumber;\r\n  }\r\n  return -1;\r\n}\r\n\r\n/**\r\n * @param {Object} headersAndPageNumbers - Headers / page numbers.\r\n * @param {Array} headers - Current headers.\r\n * @returns array of new headers.\r\n *\r\n * Takes our newly created headers with the page numbers\r\n * and adds them to the current headers.\r\n */\r\nfunction createHeaders(headersAndPageNumbers, headers) {\r\n  const { text, pageNumbers } = headersAndPageNumbers;\r\n  const newHeaders = text.map((header, index) => {\r\n    const pageNumber = pageNumbers[index];\r\n    const newHeader = createBlankHeader(\r\n      headers,\r\n      header,\r\n      pageNumber,\r\n      pageNumber\r\n    );\r\n    return newHeader;\r\n  });\r\n  return newHeaders;\r\n}\r\n\r\n/**\r\n * @param {String} tocText - Uploaded Table of Contents\r\n * @returns Table of Contents without the ellipses.\r\n *\r\n * We replace ... with our ellipse string at the top of the file.\r\n */\r\nfunction syncEllipses(tocText) {\r\n  const regex = /\\.{2,}/gi;\r\n  const temp = tocText.replace(regex, ellipse);\r\n  return temp;\r\n}\r\n\r\n/**\r\n * @param {String} tocText - Uploaded Table of Contents\r\n * @returns Table of Contents without \"Table of Contents\"\r\n */\r\nfunction removeTableOfContents(tocText) {\r\n  let tempText = tocText;\r\n\r\n  const regex = /Table of Contents/gi;\r\n\r\n  tempText = tocText.replace(regex, \"\");\r\n\r\n  return tempText;\r\n}\r\n\r\n/**\r\n * @param {String} tocText - Uploaded Table of Contents\r\n * @returns Table of Contents without roman numerals.\r\n *\r\n * Iterate through our roman numerals array. Currently\r\n * we supposed up to 30 Table of Contents pages.\r\n *\r\n * We make sure there is a roman numeral on the page\r\n * and then we check to see if it is surrounded by blank spaces.\r\n */\r\nfunction removeRomanNumerals(tocText) {\r\n  let tempText = tocText;\r\n  romans.forEach((roman) => {\r\n    // Search all occurences of the roman and find out\r\n    // if they are by themselves.\r\n    roman = roman.toLowerCase();\r\n    const romanLen = roman.length;\r\n    const regex = new RegExp(roman, \"g\");\r\n    const index = tempText.search(regex);\r\n\r\n    if (index !== -1) {\r\n      // Check before it and after it for a space.\r\n\r\n      let sliced = tempText.slice(index - 1, index + romanLen);\r\n      sliced = removeNewLines(sliced);\r\n\r\n      const indexOfRoman = sliced.search(roman);\r\n\r\n      if (indexOfRoman === 0) {\r\n        // Its good.\r\n        const nextSpace = sliced.slice(indexOfRoman + romanLen);\r\n        if (nextSpace === \"\") {\r\n          // Slice from tempText\r\n          const first = tempText.slice(0, index);\r\n          const second = tempText.slice(index + romanLen, tempText.length);\r\n          tempText = first + second;\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return tempText;\r\n}\r\n\r\n/**\r\n * @param {String} tocText - Uploaded Table of Contents\r\n * @returns Table of Contents without \\n\r\n */\r\nfunction removeNewLines(text) {\r\n  const regex = /\\n+/gi;\r\n  return text.replace(regex, \"\");\r\n}\r\n\r\n/**\r\n * @param {String} tocText - Uploaded Table of Contents\r\n * @returns Table of Contents without ...\r\n */\r\nfunction removeEllipses(text) {\r\n  const regex = /\\.{2,}/gi;\r\n  return text.replace(regex, \"\");\r\n}\r\n\r\n/**\r\n * @param {String} tocText - Uploaded Table of Contents\r\n * @returns Table of Contents without spaces.\r\n */\r\nfunction removeSpaces(text) {\r\n  const regex = /\\s+/gi;\r\n  return text.replace(regex, \"\");\r\n}\r\n\r\nconst romans = [\r\n  \"I\",\r\n  \"II\",\r\n  \"III\",\r\n  \"IV\",\r\n  \"V\",\r\n  \"VI\",\r\n  \"VII\",\r\n  \"VIII\",\r\n  \"IX\",\r\n  \"X\",\r\n  \"XI\",\r\n  \"XII\",\r\n  \"XIII\",\r\n  \"XIV\",\r\n  \"XV\",\r\n  \"XVI\",\r\n  \"XVII\",\r\n  \"XVIII\",\r\n  \"XIX\",\r\n  \"XX\",\r\n  \"XXI\",\r\n  \"XXII\",\r\n  \"XXIII\",\r\n  \"XXIV\",\r\n  \"XXV\",\r\n  \"XXVI\",\r\n  \"XXVII\",\r\n  \"XXVIII\",\r\n  \"XXIX\",\r\n  \"XXX\",\r\n];\r\n\r\nexport default getHeadersFromTocText;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TableOfContentsTextArea = styled.textarea`\r\n  width: 100%;\r\n  height: 100%;\r\n  resize: vertical;\r\n  border: 1px solid lightgray;\r\n`;\r\n\r\nfunction TocTab(props) {\r\n  // Properties.\r\n  const { tocText, changeTocString, addTocHeaders } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <label htmlFor=\"tocString\">Table of Contents String:</label>\r\n      <TableOfContentsTextArea\r\n        htmlFor=\"tocString\"\r\n        value={tocText}\r\n        onChange={(e) => changeTocString(e)}\r\n      />\r\n      <button onClick={addTocHeaders}>Ok</button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TocTab;\r\n","/**\r\n * @param {Array} arr1 - Random array\r\n * @param {Array} arr2 - Random array\r\n * @returns boolean - Whether or not they are equal.\r\n * Iterate through arrays and compare values.\r\n */\r\nfunction compareArrays(arr1, arr2) {\r\n  if (arr1.length !== arr2.length) {\r\n    return false;\r\n  } else {\r\n    let equal = true;\r\n    arr1.forEach((currLine, index) => {\r\n      const otherLine = arr2[index];\r\n      if (currLine !== otherLine) {\r\n        equal = false;\r\n      }\r\n    });\r\n    return equal;\r\n  }\r\n}\r\n\r\nexport default compareArrays;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  display: block;\r\n  border: 1px solid lightgray !important;\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n`;\r\n\r\nconst Xbutton = styled.button`\r\n  position: absolute;\r\n  right: -110px;\r\n`;\r\n\r\nfunction HeaderLine(props) {\r\n  // Properties\r\n  const { line, index, updateLines, addLine, removeLine } = props;\r\n\r\n  // State\r\n  const [focused, setFocused] = React.useState(false);\r\n\r\n  // Misc\r\n  const randID = Math.floor(Math.random() * 1000000);\r\n\r\n  // Update header lines on line change.\r\n  const onChange = (e, index) => {\r\n    const { value } = e.target;\r\n    updateLines(index, value);\r\n  };\r\n\r\n  // Track when the user hits 'enter' and add the appropriate line.\r\n  const onKeyDown = (e) => {\r\n    const { keyCode } = e;\r\n    const { selectionStart } = e.target;\r\n\r\n    if (keyCode === 13) {\r\n      addLine(selectionStart, index);\r\n    }\r\n  };\r\n\r\n  // Automatically focus on the text input\r\n  // if we hover over it.\r\n  const mouseEnter = () => {\r\n    const input = document.getElementById(randID);\r\n    input.focus();\r\n  };\r\n\r\n  // Toggle focus to true.\r\n  // Will show the 'x' button.\r\n  const onFocus = () => {\r\n    setFocused(true);\r\n  };\r\n\r\n  // Toggle focus to false.\r\n  // If we blur stop showing the 'x' button.\r\n  // If we click the 'x' button blur and\r\n  // remove the line\r\n  const onBlur = (e) => {\r\n    setFocused(false);\r\n    try {\r\n      const { title } = e.relatedTarget;\r\n      if (title === \"Remove Line\") {\r\n        removeLine(index);\r\n      }\r\n    } catch {\r\n      // We didn't click the \"X\" button.\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputContainer>\r\n      <Input\r\n        type=\"text\"\r\n        value={line}\r\n        key={index}\r\n        index={index}\r\n        onChange={(e) => onChange(e, index)}\r\n        onKeyDown={onKeyDown}\r\n        onMouseEnter={mouseEnter}\r\n        onFocus={onFocus}\r\n        onBlur={(e) => onBlur(e)}\r\n        id={randID}\r\n      />\r\n      {focused && (\r\n        <Xbutton type=\"text\" title=\"Remove Line\">\r\n          X\r\n        </Xbutton>\r\n      )}\r\n    </InputContainer>\r\n  );\r\n}\r\nexport default HeaderLine;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Utils\r\nimport compareArrays from \"../utils/compareArrays\";\r\n\r\n// Components\r\nimport HeaderLine from \"./HeaderLine/HeaderLine\";\r\n\r\nconst TopHeader = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\n  border: 1px dashed black;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n\r\n  &:hover {\r\n    border: 2px dashed yellow;\r\n  }\r\n`;\r\n\r\nfunction Header(props) {\r\n  const {\r\n    header,\r\n    removing,\r\n    inserting,\r\n    removeHeader,\r\n    updateHeader,\r\n    addForDeletion,\r\n    addForInsertion,\r\n    removeForDeletion,\r\n    markedForDeletion,\r\n    markedForInsertion,\r\n    removeForInsertion,\r\n  } = props;\r\n\r\n  // Properties\r\n  const { lines, idNumber } = header;\r\n\r\n  // Misc that effects properties or state\r\n  const isMarkedForRemoval = markedForDeletion.includes(idNumber);\r\n  const isMarkedForInsertion = markedForInsertion.includes(idNumber);\r\n\r\n  // State\r\n  const [linesValue, setLinesValue] = React.useState(lines);\r\n  const [checkedForRemoval, setCheckedForRemoval] =\r\n    React.useState(isMarkedForRemoval);\r\n  const [checkedForInsertion, setCheckedForInsertion] =\r\n    React.useState(isMarkedForInsertion);\r\n\r\n  // Checkmarks were not being updated.\r\n  // Update checkmarks if we 'X' out of Remove Headers.\r\n  if (checkedForRemoval !== isMarkedForRemoval) {\r\n    setCheckedForRemoval(isMarkedForRemoval);\r\n  }\r\n\r\n  // Checkmarks were not being updated\r\n  // Update checkmarks if we 'X' out of Insert Headers.\r\n  if (checkedForInsertion !== isMarkedForInsertion) {\r\n    setCheckedForInsertion(isMarkedForInsertion);\r\n  }\r\n\r\n  // // Not sure why this is here.\r\n  React.useEffect(() => {\r\n    const linesEqual = compareArrays(lines, linesValue);\r\n    if (linesEqual === false) {\r\n      setLinesValue(lines);\r\n    }\r\n  }, [setLinesValue, lines, linesValue]);\r\n\r\n  /**\r\n   * @param {Number} index - Line index.\r\n   * @param {String} value - New line value.\r\n   * Update the Header lines then update the header\r\n   * in the headers array.\r\n   */\r\n  const updateLines = (index, value) => {\r\n    const newLines = [...linesValue];\r\n    newLines[index] = value;\r\n    setLinesValue(newLines);\r\n    const newHeader = {\r\n      ...header,\r\n      lines: newLines,\r\n    };\r\n    updateHeader(newHeader);\r\n  };\r\n\r\n  /**\r\n   * @param {Object} e - Event object.\r\n   * Changes the page range depending on the\r\n   * name of the input we've changed.\r\n   */\r\n  const updatePageRange = (e) => {\r\n    const { name, value } = e.target;\r\n    const newHeader = {\r\n      ...header,\r\n    };\r\n    newHeader[name] = value;\r\n    updateHeader(newHeader);\r\n  };\r\n\r\n  /**\r\n   * @param {Number} selectionStart - Index of string where we've hit \"enter\".\r\n   * @param {Number} index - Index of the line we've hit \"enter\" in.\r\n   * Insert line if we've hit enter before the first char.\r\n   * Insert line if we've hit enter after the last char.\r\n   * Otherwise, split the lines in two.\r\n   * Update the new lines, then update the new header.\r\n   */\r\n  const addLine = (selectionStart, index) => {\r\n    const line = linesValue[index];\r\n    const newLines = [...linesValue];\r\n    if (selectionStart === 0) {\r\n      newLines.splice(index, 0, \"\");\r\n    } else if (line.length === selectionStart) {\r\n      newLines.splice(index + 1, 0, \"\");\r\n    } else {\r\n      const beforeEnter = line.slice(0, selectionStart).trim();\r\n      const afterEnter = line.slice(selectionStart, line.length).trim();\r\n      newLines[index] = beforeEnter;\r\n      newLines.splice(index + 1, 0, afterEnter);\r\n    }\r\n    setLinesValue(newLines);\r\n    const newHeader = {\r\n      ...header,\r\n      lines: newLines,\r\n    };\r\n    updateHeader(newHeader);\r\n  };\r\n\r\n  /**\r\n   * @param {Number} index - Index of the line to be removed.\r\n   * If there is only 1 line, we are removing the header altogether.\r\n   * Otherwise, just remove the line.\r\n   */\r\n  const removeLine = (index) => {\r\n    const newLines = [...lines];\r\n    newLines.splice(index, 1);\r\n    setLinesValue(newLines);\r\n\r\n    if (newLines.length === 0) {\r\n      removeHeader(header);\r\n    } else {\r\n      const newHeader = {\r\n        ...header,\r\n        lines: newLines,\r\n      };\r\n      updateHeader(newHeader);\r\n    }\r\n  };\r\n\r\n  /***\r\n   * Toggle the checkmark for removal.\r\n   * Updates the visual check.\r\n   */\r\n  const toggleRemovalCheck = () => {\r\n    setCheckedForRemoval(!checkedForRemoval);\r\n    if (!checkedForRemoval) {\r\n      addForDeletion(idNumber);\r\n    } else {\r\n      removeForDeletion(idNumber);\r\n    }\r\n  };\r\n\r\n  /***\r\n   * Toggle the checkmark for insertion.\r\n   * Updates the visual check.\r\n   */\r\n  const toggleInsertionCheck = () => {\r\n    setCheckedForInsertion(!checkedForInsertion);\r\n    if (!checkedForInsertion) {\r\n      addForInsertion(idNumber);\r\n    } else {\r\n      removeForInsertion(idNumber);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <TopHeader>\r\n        {removing && (\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={checkedForRemoval}\r\n            onChange={toggleRemovalCheck}\r\n          />\r\n        )}\r\n        {removing && <label onClick={toggleRemovalCheck}>Delete</label>}\r\n        {inserting && (\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={checkedForInsertion}\r\n            onChange={toggleInsertionCheck}\r\n          />\r\n        )}\r\n        {inserting && <label onClick={toggleInsertionCheck}>Insertion</label>}\r\n        <div style={{ marginLeft: \"auto\" }}>\r\n          <label>Start Page:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"startPage\"\r\n            value={header.startPage}\r\n            onChange={(e) => updatePageRange(e)}\r\n          />\r\n          <label>End Page:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"endPage\"\r\n            value={header.endPage}\r\n            onChange={(e) => updatePageRange(e)}\r\n          />\r\n        </div>\r\n      </TopHeader>\r\n      <div className=\"header\">\r\n        {linesValue.map((line, index) => {\r\n          return (\r\n            <HeaderLine\r\n              type=\"text\"\r\n              line={line}\r\n              index={index}\r\n              key={index}\r\n              addLine={addLine}\r\n              removeLine={removeLine}\r\n              updateLines={updateLines}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </HeaderContainer>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction HeadersMenu(props) {\r\n  // Properties\r\n  const { setTab, tab } = props;\r\n\r\n  return (\r\n    <menu role=\"tablist\" aria-label=\"Sample Tabs\">\r\n      <button\r\n        role=\"tab\"\r\n        aria-selected={tab === \"tab-Main\" ? \"true\" : false}\r\n        aria-controls=\"tab-Main\"\r\n        onClick={() => setTab(\"tab-Main\")}\r\n      >\r\n        Heads\r\n      </button>\r\n      <button\r\n        role=\"tab\"\r\n        aria-selected={tab === \"tab-Toc\" ? \"true\" : false}\r\n        aria-controls=\"tab-Toc\"\r\n        onClick={() => setTab(\"tab-Toc\")}\r\n      >\r\n        TOC\r\n      </button>\r\n    </menu>\r\n  );\r\n}\r\n\r\nexport default HeadersMenu;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  top: 100px;\r\n  left: 10px;\r\n  color: #ffffff;\r\n\r\n  @media screen and (max-width: 855px) {\r\n    left: 0px;\r\n  }\r\n`;\r\n\r\nconst FlexColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst CheckAndX = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nfunction PositiveButtons(props) {\r\n  // Properties\r\n  const {\r\n    addHeader,\r\n    inserting,\r\n    spaceHeaders,\r\n    applyHeaders,\r\n    addPageRanges,\r\n    toggleInserting,\r\n    insertHeadersIntoPositions,\r\n  } = props;\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"window\">\r\n        <div className=\"title-bar\">\r\n          <div className=\"title-bar-text\">Positive Controls</div>\r\n        </div>\r\n        <FlexColumn className=\"window-body\">\r\n          <button type=\"text\" onClick={addHeader}>\r\n            Add Header\r\n          </button>\r\n          <InsertButtons\r\n            inserting={inserting}\r\n            toggleInserting={toggleInserting}\r\n            insertHeadersIntoPositions={insertHeadersIntoPositions}\r\n          />\r\n          <button type=\"text\" onClick={spaceHeaders}>\r\n            Space Headers\r\n          </button>\r\n          <button type=\"text\" onClick={addPageRanges}>\r\n            Add Page Ranges\r\n          </button>\r\n          <hr />\r\n          <button type=\"text\" onClick={applyHeaders}>\r\n            Apply Headers\r\n          </button>\r\n        </FlexColumn>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction InsertButtons(props) {\r\n  // Properties.\r\n  const { toggleInserting, inserting, insertHeadersIntoPositions } = props;\r\n  if (!inserting) {\r\n    return (\r\n      <button type=\"text\" onClick={toggleInserting}>\r\n        Insert Headers\r\n      </button>\r\n    );\r\n  } else {\r\n    return (\r\n      <CheckAndX>\r\n        <button type=\"text\" onClick={insertHeadersIntoPositions}>\r\n          &#x2713;\r\n        </button>\r\n        <button type=\"text\" title=\"Close Removing\" onClick={toggleInserting}>\r\n          X\r\n        </button>\r\n      </CheckAndX>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PositiveButtons;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  top: 300px;\r\n  left: 10px;\r\n  color: #ffffff;\r\n\r\n  @media screen and (max-width: 855px) {\r\n    left: 0px;\r\n  }\r\n`;\r\n\r\nconst FlexColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst CheckAndX = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nfunction NegativeButtons(props) {\r\n  // Properties\r\n  const {\r\n    removing,\r\n    removeSpace,\r\n    clearHeaders,\r\n    toggleRemoving,\r\n    removeBlankLines,\r\n    removePageRanges,\r\n    removeBlankHeaders,\r\n    removeMarkedForDeletion,\r\n  } = props;\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"window\">\r\n        <div className=\"title-bar\">\r\n          <div className=\"title-bar-text\">Negative Controls</div>\r\n        </div>\r\n        <FlexColumn className=\"window-body\">\r\n          <RemoveButtons\r\n            removing={removing}\r\n            toggleRemoving={toggleRemoving}\r\n            removeMarkedForDeletion={removeMarkedForDeletion}\r\n          />\r\n          <button type=\"text\" onClick={removeSpace}>\r\n            Remove Auto Space\r\n          </button>\r\n          <button type=\"text\" onClick={removeBlankHeaders}>\r\n            Remove Blank Headers\r\n          </button>\r\n          <button type=\"text\" onClick={removePageRanges}>\r\n            Remove Page Ranges\r\n          </button>\r\n          <button type=\"text\" onClick={removeBlankLines}>\r\n            Remove Blank Lines\r\n          </button>\r\n          <hr />\r\n          <button type=\"text\" onClick={clearHeaders}>\r\n            Clear Headers\r\n          </button>\r\n        </FlexColumn>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction RemoveButtons(props) {\r\n  // Properties.\r\n  const { toggleRemoving, removing, removeMarkedForDeletion } = props;\r\n\r\n  if (!removing) {\r\n    return (\r\n      <button type=\"text\" onClick={toggleRemoving}>\r\n        Remove Headers\r\n      </button>\r\n    );\r\n  } else {\r\n    return (\r\n      <CheckAndX>\r\n        <button type=\"text\" onClick={removeMarkedForDeletion}>\r\n          &#x2713;\r\n        </button>\r\n        <button type=\"text\" title=\"Close Removing\" onClick={toggleRemoving}>\r\n          X\r\n        </button>\r\n      </CheckAndX>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NegativeButtons;\r\n","import axios from \"axios\";\r\n\r\nasync function sendHeadersToBackend(headers, file) {\r\n  const { fileName, filePath, metadata } = file;\r\n\r\n  const filtered = headers.filter((header) => {\r\n    const { startPage, endPage } = header;\r\n    const rangeIsOk = checkPageRange(startPage, endPage);\r\n\r\n    if (rangeIsOk) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n\r\n  const formData = new FormData();\r\n  const dictionary = {};\r\n  filtered.forEach((header, index) => {\r\n    dictionary[`${index}`] = header;\r\n  });\r\n\r\n  formData.append(\"headers\", JSON.stringify(dictionary));\r\n  formData.append(\"fileName\", fileName);\r\n  formData.append(\"filePath\", filePath);\r\n  formData.append(\"metadata\", metadata);\r\n\r\n  try {\r\n    const res = await axios.post(\"headers/apply\", formData, {\r\n      responseType: \"blob\",\r\n    });\r\n    const { headers } = res;\r\n    const filePath = headers[\"x-filepath\"];\r\n    const metadata = headers[\"x-metadata\"];\r\n\r\n    if (res.status === 200) {\r\n      const { data } = res;\r\n      return {\r\n        newBlob: data,\r\n        newFilePath: filePath,\r\n        newMetadata: metadata,\r\n      };\r\n    }\r\n  } catch (err) {\r\n    return;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Number} startPage - Starting page number of our header.\r\n * @param {Number} endPage - Ending page number of our header.\r\n * @returns boolean - Whether or not our page range is ok.\r\n *\r\n * Checks whether our startPage and endPage are numbers.\r\n * If they aren't we return false. Then check if our startPage\r\n * is less than or equal to our endPage.\r\n */\r\nfunction checkPageRange(startPage, endPage) {\r\n  try {\r\n    const startNumber = Number(startPage);\r\n    const endNumber = Number(endPage);\r\n    if (startNumber <= endNumber) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default sendHeadersToBackend;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\n// Utils\r\nimport spaceLines from \"./utils/spaceLines\";\r\nimport findHeaderById from \"./utils/findHeaderById\";\r\nimport createBlankHeader from \"./utils/createBlankHeader\";\r\nimport getHeadersFromTocText from \"./utils/getHeadersFromTocText\";\r\n\r\n// Components\r\nimport TocTab from \"./TocTab/TocTab\";\r\nimport Header from \"./Header/Header\";\r\nimport HeadersMenu from \"./HeadersMenu/HeadersMenu\";\r\nimport PositiveButtons from \"./PositiveButtons/PositiveButtons\";\r\nimport NegativeButtons from \"./NegativeButtons/NegativeButtons\";\r\n\r\n// API\r\nimport sendHeadersToBackend from \"../../../api/sendHeadersToBackend\";\r\n\r\n// Actions\r\nimport fileActions from \"../../../actions/fileActions\";\r\nimport modalsActions from \"../../../actions/modalsActions\";\r\n\r\nconst Container = styled.section`\r\n  position: relative;\r\n`;\r\n\r\nfunction NewHeaders(props) {\r\n  // Redux Actions\r\n  const {\r\n    changeBlob,\r\n    closeModal,\r\n    disableApp,\r\n    enableApp,\r\n    changeFilePath,\r\n    changeMetadata,\r\n  } = props;\r\n\r\n  // Redux State\r\n  const { pageCount, fileName, filePath, metadata } = props;\r\n\r\n  // State\r\n  const [headers, setHeaders] = React.useState([]);\r\n  const [tab, setTab] = React.useState(\"tab-Main\");\r\n  const [tocText, setTocText] = React.useState(\"\");\r\n  const [removing, setRemoving] = React.useState(false);\r\n  const [inserting, setInserting] = React.useState(false);\r\n  const [markedForDeletion, setMarkedForDeletion] = React.useState([]);\r\n  const [markedForInsertion, setMarkedForInsertion] = React.useState([]);\r\n\r\n  /**\r\n   * @param {Object} e - onChange event object.\r\n   * Sets the toc text and updates the textarea.\r\n   */\r\n  const changeTocString = (e) => {\r\n    const { value } = e.target;\r\n    setTocText(value);\r\n  };\r\n\r\n  /**\r\n   * We click the \"Ok\" button to add the toc headers\r\n   * to our current headers. Then return to the main tab\r\n   * and clear the toc textarea.\r\n   */\r\n  const addTocHeaders = () => {\r\n    const tocHeaders = getHeadersFromTocText(tocText, headers);\r\n    const newHeaders = [...headers].concat(tocHeaders);\r\n    setHeaders(newHeaders);\r\n    setTab(\"tab-Main\");\r\n    setTocText(\"\");\r\n  };\r\n\r\n  /**\r\n   * Creates a new blank header and adds to end of the array.\r\n   * Then queries our document and moves our camera into view.\r\n   */\r\n  const addHeader = () => {\r\n    const newHeader = createBlankHeader(headers);\r\n    const newHeaders = headers.concat([newHeader]);\r\n    setHeaders(newHeaders);\r\n    const headerElements = Array.from(document.querySelectorAll(\".header\"));\r\n    try {\r\n      headerElements[headerElements.length - 1].scrollIntoView();\r\n    } catch {\r\n      // not into view I guess.\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Object} header - Header object.\r\n   * Checks if the index is the same.\r\n   * If not traverse the array and remove the header.\r\n   */\r\n  const removeHeader = (header) => {\r\n    const { index, idNumber } = header;\r\n    const headerAtIndex = headers[index];\r\n    if (headerAtIndex.idNumber === idNumber) {\r\n      const newHeaders = [...headers];\r\n      newHeaders.splice(index, 1);\r\n      setHeaders(newHeaders);\r\n    } else {\r\n      const found = findHeaderById(idNumber, headers);\r\n      if (found !== -1) {\r\n        const newHeaders = [...headers];\r\n        newHeaders.splice(found, 1);\r\n        setHeaders(newHeaders);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Object} newHeader - Header object with changed values.\r\n   * We don't know whats changed but we update the header anyway.\r\n   * Use the index first to find the header if not traverse\r\n   * the array and update the header by replacing it with the new one.\r\n   */\r\n  const updateHeader = (newHeader) => {\r\n    const { index, idNumber } = newHeader;\r\n    const headerAtIndex = headers[index];\r\n    if (headerAtIndex.idNumber === idNumber) {\r\n      const newHeaders = [...headers];\r\n      newHeaders[index] = newHeader;\r\n      setHeaders(newHeaders);\r\n    } else {\r\n      const found = findHeaderById(idNumber, headers);\r\n      if (found !== -1) {\r\n        const newHeaders = [...headers];\r\n        newHeaders[found] = newHeader;\r\n        setHeaders(newHeaders);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Iterate over the array and space each line.\r\n   * Then upgrade the headers.\r\n   */\r\n  const spaceHeaders = () => {\r\n    const newHeaders = headers.map((header) => {\r\n      const newHeader = spaceLines(header, false);\r\n      return newHeader;\r\n    });\r\n\r\n    setHeaders(newHeaders);\r\n  };\r\n\r\n  /**\r\n   * Combine the header lines into one.\r\n   * Then upgrade the headers.\r\n   */\r\n  const removeSpace = () => {\r\n    const newHeaders = headers.map((header) => {\r\n      const newHeader = spaceLines(header, true);\r\n      return newHeader;\r\n    });\r\n    setHeaders(newHeaders);\r\n  };\r\n\r\n  /**\r\n   * Swap the removing state.\r\n   * If we have headers marked for deletion,\r\n   * remove them from the array.\r\n   */\r\n  const toggleRemoving = () => {\r\n    setRemoving(!removing);\r\n    if (!removing && markedForDeletion.length > 0) {\r\n      setMarkedForDeletion([]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Swap the inserting state.\r\n   * If we have headers marked for insertion,\r\n   * remove them from the array.\r\n   */\r\n  const toggleInserting = () => {\r\n    setInserting(!inserting);\r\n    if (!inserting && markedForInsertion.length > 0) {\r\n      setMarkedForInsertion([]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {String} idNumber - Header identifier.\r\n   * Add the header idNumber to the array.\r\n   */\r\n  const addForDeletion = (idNumber) => {\r\n    const newMarked = [...markedForDeletion];\r\n    newMarked.push(idNumber);\r\n    setMarkedForDeletion(newMarked);\r\n  };\r\n\r\n  /**\r\n   * @param {String} idNumber - Header identifier.\r\n   * Add the header idNumber to the array.\r\n   */\r\n  const addForInsertion = (idNumber) => {\r\n    const newMarked = [...markedForInsertion];\r\n    newMarked.push(idNumber);\r\n    setMarkedForInsertion(newMarked);\r\n  };\r\n\r\n  /**\r\n   * @param {String} idNumber - Header identifier.\r\n   * Remove the header idNumber from the array.\r\n   */\r\n  const removeForDeletion = (idNumber) => {\r\n    let newMarked = [];\r\n    markedForDeletion.forEach((marked) => {\r\n      if (idNumber !== marked) {\r\n        newMarked.push(marked);\r\n      }\r\n    });\r\n    setMarkedForDeletion(newMarked);\r\n  };\r\n\r\n  /**\r\n   * @param {String} idNumber - Header identifier.\r\n   * Remove the header idNumber from the array.\r\n   */\r\n  const removeForInsertion = (idNumber) => {\r\n    let newMarked = [];\r\n    markedForInsertion.forEach((marked) => {\r\n      if (idNumber !== marked) {\r\n        newMarked.push(marked);\r\n      }\r\n    });\r\n    setMarkedForInsertion(newMarked);\r\n  };\r\n\r\n  /**\r\n   * Iterate over the headers. If the idNumber is also\r\n   * in the markedForDeletion array, remove it from the headers.\r\n   * Set the new headers, clear the markedForDeletion array,\r\n   * and switch back to normal mode.\r\n   */\r\n  const removeMarkedForDeletion = () => {\r\n    let newHeaders = [];\r\n    headers.forEach((header) => {\r\n      const { idNumber } = header;\r\n      if (!markedForDeletion.includes(idNumber)) {\r\n        newHeaders.push(header);\r\n      }\r\n    });\r\n    setHeaders(newHeaders);\r\n    setMarkedForDeletion([]);\r\n    setRemoving(false);\r\n  };\r\n\r\n  /**\r\n   * Iterate over the markedForInsertion array.\r\n   * Find the index of the header in our headers array.\r\n   * Then add a new blank header above it. Set the new headers.\r\n   * Clear the markedForInsertion array and switch back to normal\r\n   * mode.\r\n   */\r\n  const insertHeadersIntoPositions = () => {\r\n    let newHeaders = [...headers];\r\n    markedForInsertion.forEach((idNumber) => {\r\n      const indexOfPosition = findHeaderById(idNumber, newHeaders);\r\n      const newHeader = createBlankHeader(newHeaders, \"\", -1, -1);\r\n      newHeaders.splice(indexOfPosition, 0, newHeader);\r\n    });\r\n    setHeaders(newHeaders);\r\n    setMarkedForInsertion([]);\r\n    setInserting(false);\r\n  };\r\n\r\n  /**\r\n   * Iterate over the headers. Combine the lines and create\r\n   * a combined string. If the text length is 0 after trimming,\r\n   * remove the header.\r\n   */\r\n  const removeBlankHeaders = () => {\r\n    const newHeaders = headers.filter((header) => {\r\n      const { lines } = header;\r\n      let text = \"\";\r\n      lines.forEach((line) => {\r\n        text = text + line;\r\n      });\r\n\r\n      if (text.trim().length === 0) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n    setHeaders(newHeaders);\r\n  };\r\n\r\n  const applyHeaders = async () => {\r\n    disableApp();\r\n    const res = await sendHeadersToBackend(headers, {\r\n      fileName,\r\n      filePath,\r\n      metadata,\r\n    });\r\n    const { newBlob, newFilePath, newMetadata } = res;\r\n    const blob = URL.createObjectURL(newBlob);\r\n    changeBlob(blob);\r\n    closeModal();\r\n    enableApp();\r\n    changeFilePath(newFilePath);\r\n    changeMetadata(newMetadata);\r\n  };\r\n\r\n  const addPageRanges = () => {\r\n    const newHeaders = headers.map((header, index) => {\r\n      const { lines, startPage } = header;\r\n      const endPage = calculateEndPage(index);\r\n      let newLines = [...lines];\r\n      if (endPage - startPage > 0) {\r\n        const pageRange = `[pages ${startPage}-${endPage}]`;\r\n        if (lines.length === 1) {\r\n          newLines.push(pageRange);\r\n        } else {\r\n          const lastLineIndex = findLastLineWithText(lines);\r\n          const lineBeforeLast =\r\n            lines[lastLineIndex - 1].trim() + \" \" + pageRange;\r\n          const lineBeforeBefore = lines[lastLineIndex - 2].trim();\r\n          if (lineBeforeBefore.length >= lineBeforeLast.length) {\r\n            newLines[lastLineIndex - 1] = lineBeforeLast;\r\n          } else {\r\n            newLines.splice(lastLineIndex, 0, pageRange);\r\n          }\r\n        }\r\n      }\r\n      const newHeader = {\r\n        ...header,\r\n        lines: newLines,\r\n      };\r\n      return newHeader;\r\n    });\r\n    setHeaders(newHeaders);\r\n  };\r\n\r\n  const findLastLineWithText = (lines) => {\r\n    let index = -1;\r\n\r\n    lines.forEach((line, i) => {\r\n      const trimmed = line.trim();\r\n\r\n      if (trimmed.length > 0) {\r\n        index = i + 1;\r\n      }\r\n    });\r\n\r\n    return index;\r\n  };\r\n\r\n  const calculateEndPage = (index) => {\r\n    try {\r\n      const nextHeader = headers[index + 1];\r\n      const { endPage } = nextHeader;\r\n      return Number(endPage) - 1;\r\n    } catch {\r\n      return Number(pageCount);\r\n    }\r\n  };\r\n\r\n  const clearHeaders = () => {\r\n    setHeaders([]);\r\n  };\r\n\r\n  const removePageRanges = () => {\r\n    const newHeaders = headers.map((header) => {\r\n      const regex = /\\[pages\\s+\\d+\\s+to\\s+\\d+\\]/gi;\r\n      const { lines } = header;\r\n      let newLines = [];\r\n      lines.forEach((line) => {\r\n        const searched = line.search(regex);\r\n        if (searched !== -1) {\r\n          const newLine = line.replace(regex, \"\");\r\n          if (newLine.trim().length > 0) {\r\n            newLines.push(newLine);\r\n          }\r\n        } else {\r\n          newLines.push(line);\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...header,\r\n        lines: newLines,\r\n      };\r\n    });\r\n    setHeaders(newHeaders);\r\n  };\r\n\r\n  const removeBlankLines = () => {\r\n    const newHeaders = headers.map((header) => {\r\n      const { lines } = header;\r\n      let newLines = [];\r\n      lines.forEach((line) => {\r\n        const trimmed = line.trim();\r\n        if (line.length > 0) {\r\n          newLines.push(trimmed);\r\n        }\r\n      });\r\n      return {\r\n        ...header,\r\n        lines: newLines,\r\n      };\r\n    });\r\n\r\n    setHeaders(newHeaders);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <PositiveButtons\r\n        inserting={inserting}\r\n        addHeader={addHeader}\r\n        applyHeaders={applyHeaders}\r\n        spaceHeaders={spaceHeaders}\r\n        addPageRanges={addPageRanges}\r\n        toggleInserting={toggleInserting}\r\n        insertHeadersIntoPositions={insertHeadersIntoPositions}\r\n      />\r\n      <NegativeButtons\r\n        removing={removing}\r\n        removeSpace={removeSpace}\r\n        clearHeaders={clearHeaders}\r\n        toggleRemoving={toggleRemoving}\r\n        removePageRanges={removePageRanges}\r\n        removeBlankLines={removeBlankLines}\r\n        removeBlankHeaders={removeBlankHeaders}\r\n        removeMarkedForDeletion={removeMarkedForDeletion}\r\n      />\r\n      <section className=\"tabs\">\r\n        <HeadersMenu tab={tab} setTab={setTab} />\r\n        {tab === \"tab-Main\" && (\r\n          <article role=\"tabpanel\">\r\n            {headers.map((header) => {\r\n              const { idNumber } = header;\r\n              return (\r\n                <Header\r\n                  key={idNumber}\r\n                  header={header}\r\n                  removing={removing}\r\n                  inserting={inserting}\r\n                  removeHeader={removeHeader}\r\n                  updateHeader={updateHeader}\r\n                  addForDeletion={addForDeletion}\r\n                  addForInsertion={addForInsertion}\r\n                  removeForDeletion={removeForDeletion}\r\n                  markedForDeletion={markedForDeletion}\r\n                  markedForInsertion={markedForInsertion}\r\n                  removeForInsertion={removeForInsertion}\r\n                />\r\n              );\r\n            })}\r\n          </article>\r\n        )}\r\n        {tab === \"tab-Toc\" && (\r\n          <article role=\"tabpanel\" id=\"tab-Toc\">\r\n            <TocTab\r\n              tocText={tocText}\r\n              addTocHeaders={addTocHeaders}\r\n              changeTocString={changeTocString}\r\n            />\r\n          </article>\r\n        )}\r\n      </section>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst { changeBlob, enableApp, disableApp, changeFilePath, changeMetadata } =\r\n  fileActions;\r\nconst { closeModal } = modalsActions;\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { file } = state;\r\n  return {\r\n    ...file,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  changeBlob,\r\n  closeModal,\r\n  enableApp,\r\n  disableApp,\r\n  changeFilePath,\r\n  changeMetadata,\r\n})(NewHeaders);\r\n","import axios from \"axios\";\r\n\r\nasync function sendPageNumbersToBackend(state) {\r\n  const { startPage, endPage, text, option } = state;\r\n\r\n  if (option === \"range\") {\r\n    const rangeIsOk = checkPageRange(startPage, endPage);\r\n\r\n    if (!rangeIsOk) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const dictionary = {\r\n    startPage,\r\n    endPage,\r\n    text,\r\n    range: option,\r\n  };\r\n\r\n  const formData = new FormData();\r\n  formData.append(\"pageNumbers\", JSON.stringify(dictionary));\r\n\r\n  try {\r\n    const res = await axios.post(\"pageNumbers/apply\", formData, {\r\n      responseType: \"blob\",\r\n    });\r\n    if (res.status === 200) {\r\n      const { data } = res;\r\n      return data;\r\n    }\r\n  } catch (err) {\r\n    return;\r\n  }\r\n  return {};\r\n}\r\n\r\n/**\r\n * @param {Number} startPage - Starting page number of our header.\r\n * @param {Number} endPage - Ending page number of our header.\r\n * @returns boolean - Whether or not our page range is ok.\r\n *\r\n * Checks whether our startPage and endPage are numbers.\r\n * If they aren't we return false. Then check if our startPage\r\n * is less than or equal to our endPage.\r\n */\r\nfunction checkPageRange(startPage, endPage) {\r\n  try {\r\n    const startNumber = Number(startPage);\r\n    const endNumber = Number(endPage);\r\n    if (startNumber <= endNumber) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default sendPageNumbersToBackend;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\n// Actions\r\nimport fileActions from \"../../../actions/fileActions\";\r\nimport modalsActions from \"../../../actions/modalsActions\";\r\n\r\n// API\r\nimport sendPageNumbersToBackend from \"../../../api/sendPageNumbersToBackend\";\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Outcome = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid black;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  margin: 20px 0;\r\n  padding: 10px 0;\r\n`;\r\n\r\nconst CenterTextInput = styled.input`\r\n  text-align: center;\r\n`;\r\n\r\nconst OutcomeLabel = styled.label`\r\n  text-align: center;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst MultipleInputs = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst PageRangeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst RadioContainer = styled.div`\r\n  display: flex;\r\n  margin: 10px 0;\r\n  align-items: center;\r\n`;\r\n\r\nconst RangeContainer = styled.div`\r\n  margin: 0 auto;\r\n  display: flex;\r\n`;\r\n\r\nconst Range = styled.div`\r\n  margin: 0 5px;\r\n`;\r\n\r\nfunction PageNumbers(props) {\r\n  // Redux Store Actions\r\n  const { closeModal, changeBlob, enableApp, disableApp } = props;\r\n\r\n  // State\r\n  const [text, setText] = React.useState(\"<<1>>\");\r\n  const [outcome, setOutcome] = React.useState(\"<<1>>\");\r\n  const [startingPage, setStartingPage] = React.useState(1);\r\n  const [startPage, setStartPage] = React.useState(1);\r\n  const [endPage, setEndPage] = React.useState(1);\r\n  const [option, setOption] = React.useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    if (name === \"centerPageNumber\") {\r\n      setText(value);\r\n      changeOutcome(value);\r\n    } else if (name === \"startPage\") {\r\n      setStartPage(value);\r\n    } else if (name === \"startingPage\") {\r\n      // setStartingPage(value);\r\n      startPageHelper(value);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {String} newValue - Center page number value.\r\n   * If we find the proper code for the page number, remove the brackets.\r\n   * Otherwise, keep the text as is.\r\n   */\r\n  const changeOutcome = (newValue) => {\r\n    const regex = /<<\\d+>>/g;\r\n    const searched = newValue.search(regex);\r\n    if (searched !== -1) {\r\n      const regex2 = /<<|>>/g;\r\n      const replaced = newValue.replace(regex2, \"\");\r\n      setOutcome(replaced);\r\n    } else {\r\n      setOutcome(newValue);\r\n    }\r\n  };\r\n\r\n  const onOptionChange = (e) => {\r\n    const { id } = e.target;\r\n    setOption(id);\r\n  };\r\n\r\n  const startPageHelper = (newStartPage) => {\r\n    // setStartPage(newStartPage);\r\n    setStartingPage(newStartPage);\r\n\r\n    const regex = /<<\\d+>>/g;\r\n    const searched = text.search(regex);\r\n    if (searched !== -1) {\r\n      const newText = text.replace(regex, \"<<\" + newStartPage + \">>\");\r\n      const mockEvent = {\r\n        target: {\r\n          name: \"centerPageNumber\",\r\n          value: newText,\r\n        },\r\n      };\r\n      onChange(mockEvent);\r\n    }\r\n  };\r\n\r\n  const applyPageNumbers = async () => {\r\n    disableApp();\r\n    const state = {\r\n      text,\r\n      outcome,\r\n      startPage,\r\n      endPage,\r\n      option,\r\n      startingPage,\r\n    };\r\n    const newBlob = await sendPageNumbersToBackend(state);\r\n    const blob = URL.createObjectURL(newBlob);\r\n    changeBlob(blob);\r\n    closeModal();\r\n    enableApp();\r\n  };\r\n\r\n  return (\r\n    <article role=\"tabpanel\">\r\n      <MultipleInputs>\r\n        <InputContainer>\r\n          <label htmlFor=\"centerPageNumber\">Center Page Number:</label>\r\n          <CenterTextInput\r\n            type=\"text\"\r\n            name=\"centerPageNumber\"\r\n            value={text}\r\n            onChange={onChange}\r\n          />\r\n        </InputContainer>\r\n        <InputContainer>\r\n          <label htmlFor=\"centerPageNumber\">Starting Page Number:</label>\r\n          <CenterTextInput\r\n            type=\"number\"\r\n            name=\"startingPage\"\r\n            min=\"1\"\r\n            value={startingPage}\r\n            onChange={onChange}\r\n          />\r\n        </InputContainer>\r\n      </MultipleInputs>\r\n      <Outcome>\r\n        <OutcomeLabel htmlFor=\"outcome\">Outcome:</OutcomeLabel>\r\n        <CenterTextInput\r\n          type=\"text\"\r\n          name=\"outcome\"\r\n          value={outcome}\r\n          disabled={true}\r\n        />\r\n      </Outcome>\r\n      <PageRangeContainer>\r\n        <RadioContainer>\r\n          <input\r\n            id=\"all\"\r\n            type=\"radio\"\r\n            name=\"pageRange\"\r\n            onClick={onOptionChange}\r\n          />\r\n          <label htmlFor=\"all\">All Pages</label>\r\n        </RadioContainer>\r\n        <RadioContainer>\r\n          <input\r\n            id=\"range\"\r\n            type=\"radio\"\r\n            name=\"pageRange\"\r\n            onClick={onOptionChange}\r\n          />\r\n          <label htmlFor=\"range\">Page Range</label>\r\n          {option === \"range\" && (\r\n            <PageRangeInputs\r\n              startPage={startPage}\r\n              endPage={endPage}\r\n              setStartPage={setStartPage}\r\n              setEndPage={setEndPage}\r\n            />\r\n          )}\r\n        </RadioContainer>\r\n      </PageRangeContainer>\r\n      <button type=\"text\" onClick={applyPageNumbers}>\r\n        Ok\r\n      </button>\r\n      <button type=\"text\" onClick={closeModal}>\r\n        Cancel\r\n      </button>\r\n    </article>\r\n  );\r\n}\r\n\r\nfunction PageRangeInputs(props) {\r\n  const { startPage, endPage, setStartPage, setEndPage } = props;\r\n  return (\r\n    <RangeContainer>\r\n      <Range>\r\n        <label htmlFor=\"startPage\">Start Page:</label>\r\n        <input\r\n          type=\"number\"\r\n          min=\"1\"\r\n          name=\"startPage\"\r\n          value={startPage}\r\n          onChange={(e) => setStartPage(e.target.value)}\r\n        />\r\n      </Range>\r\n      <Range>\r\n        <label htmlFor=\"startPage\">End Page:</label>\r\n        <input\r\n          type=\"number\"\r\n          min=\"1\"\r\n          name=\"endPage\"\r\n          value={endPage}\r\n          onChange={(e) => setEndPage(e.target.value)}\r\n        />\r\n      </Range>\r\n    </RangeContainer>\r\n  );\r\n}\r\n\r\nconst { changeBlob, enableApp, disableApp } = fileActions;\r\nconst { closeModal } = modalsActions;\r\n\r\nexport default connect(null, { closeModal, changeBlob, enableApp, disableApp })(\r\n  PageNumbers\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Components\r\nimport ModalTemplate from \"./ModalTemplate\";\r\n\r\n// Sub Modals\r\nimport NewHeaders from \"./NewHeaders/NewHeaders\";\r\nimport PageNumbers from \"./PageNumbers/PageNumbers\";\r\n\r\nfunction Modals(props) {\r\n  // Redux Store Properties\r\n  const { modals } = props;\r\n  const { openModal } = modals;\r\n\r\n  // Misc\r\n  const displayModal = openModal.length > 0 ? true : false;\r\n\r\n  if (openModal === \"Headers\") {\r\n    return displayModal && <ModalTemplate Body={NewHeaders} />;\r\n  } else {\r\n    return displayModal && <ModalTemplate Body={PageNumbers} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { headers, modals } = state;\r\n  return {\r\n    headers,\r\n    modals,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Modals);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  width: 100vw;\r\n  opacity: 0.9;\r\n  z-index: 11;\r\n  position: absolute;\r\n  background-color: #333;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  color: yellow;\r\n  font-size: 32px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Hidden = styled.div`\r\n  display: none;\r\n`;\r\n\r\nfunction Loading({ pointerEvents }) {\r\n  if (pointerEvents === \"none\") {\r\n    return (\r\n      <Container>\r\n        <Text>LOADING</Text>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return <Hidden></Hidden>;\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","/**\r\n * @param {Array} details - Array of summary/detail elements in our top navigation. \r\n * @param {Number} TIME_TO_CLOSE - How fast we want to close the Dropdowns.\r\n * \r\n * Iterate through every Dropdown and close them after the suggested time.\r\n */\r\nfunction closeAllDropdowns (details, TIME_TO_CLOSE) {\r\n    details.forEach(detail => {\r\n        setTimeout(() => {\r\n            detail.removeAttribute(\"open\");\r\n        }, TIME_TO_CLOSE)\r\n    });\r\n}\r\n\r\n/**\r\n * @param {Array} details - Array of summary/detail elements in our top navigation. \r\n * @param {String} title - The title of the Dropdown we want to keep open.\r\n * @param {Number} TIME_TO_CLOSE - How fast we want to close the Dropdowns.\r\n * \r\n * Iterate through every Dropdown and close them after the suggested time.\r\n */\r\nfunction closeDropdownsAfterAnotherOpened (details, title, TIME_TO_CLOSE) {\r\n    details.forEach(detail => {\r\n        setTimeout(() => {\r\n            const classList = Array.from(detail.classList);\r\n            if (!classList.includes(title)) {\r\n                detail.removeAttribute(\"open\");\r\n            }\r\n        }, TIME_TO_CLOSE)\r\n    });\r\n}\r\n\r\nconst utils = {\r\n    closeAllDropdowns,\r\n    closeDropdownsAfterAnotherOpened\r\n}\r\n\r\nexport default utils;","import utils from \"./utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Local Data\r\nimport { TIME_TO_CLOSE_DROPDOWN } from \"../../localData\";\r\n\r\n// Actions\r\nimport actions from \"../../../actions\";\r\n\r\n/**\r\n * QOL:\r\n * Add a magnify effect to see which buttons we are hovering.\r\n * Text is incredibly small, maybe make bigger?\r\n * Hover on the Dropdowns.\r\n * Will probably require a styled component.\r\n */\r\n\r\nfunction Dropdown(props) {\r\n  // Redux Actions\r\n  const { expandDropdown, closeDropdown } = props;\r\n\r\n  // Props\r\n  // location is where the dropdown is so we can close others in the same area.\r\n  // This will be useful if we use this component in other places.\r\n  const { data } = props; // From the TopNavigation component.\r\n  const { title, items, location } = data;\r\n\r\n  // Misc\r\n  // TopNavigation elements which we click to open the respected Dropdown.\r\n  // We will use these elements to assist in opening / closing.\r\n  const details = Array.from(document.querySelectorAll(`.${location}`));\r\n\r\n  /**\r\n   * @param {Object} e - Event object.\r\n   *\r\n   * If we click the same Dropdown we have open, close all of them.\r\n   * If we click a Dropdown and have none open, open the Dropdown.\r\n   * If we click a Dropdown with another Dropdown open,\r\n   * open the Dropdown and close the other one.\r\n   */\r\n  const toggleOpen = (e) => {\r\n    if (topNavigation.openDropdown === title) {\r\n      utils.closeAllDropdowns(details, TIME_TO_CLOSE_DROPDOWN);\r\n      closeDropdown();\r\n    } else {\r\n      utils.closeDropdownsAfterAnotherOpened(\r\n        details,\r\n        title,\r\n        TIME_TO_CLOSE_DROPDOWN\r\n      );\r\n      expandDropdown(title);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul className=\"tree-view\">\r\n      <li>\r\n        <details\r\n          className={`${location} ${title}`}\r\n          onClick={(e) => toggleOpen(e)}\r\n        >\r\n          <summary>{title}</summary>\r\n          <ul>\r\n            {items.map((item, index) => {\r\n              const { state } = data;\r\n              const { label, onClick } = item;\r\n              const buttonClick = (e) => {\r\n                e.stopPropagation();\r\n                onClick(state);\r\n                closeDropdown();\r\n                utils.closeAllDropdowns(details, TIME_TO_CLOSE_DROPDOWN);\r\n              };\r\n              return (\r\n                <li onClick={(e) => buttonClick(e)} key={index}>\r\n                  {label}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </details>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst { topNavigation } = actions;\r\nconst { expandDropdown, closeDropdown } = topNavigation;\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { topNavigation } = state;\r\n  return {\r\n    topNavigation,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { expandDropdown, closeDropdown })(\r\n  Dropdown\r\n);\r\n","/**\r\n * @param {Object} state - file, uploadFile, closeOpenedFile. State from the redux store and actions.\r\n *\r\n * Temporarily open a file selection. If we choose a file,\r\n * upload it!\r\n */\r\nfunction openFile(state) {\r\n  const { uploadFile } = state;\r\n  const input = document.createElement(\"input\");\r\n  input.setAttribute(\"type\", \"file\");\r\n  input.setAttribute(\"accept\", \"pdf\");\r\n  input.addEventListener(\"change\", async (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    if (file.type === \"application/pdf\") {\r\n      const blob = URL.createObjectURL(file);\r\n      const fileObject = createFileObject(file);\r\n      uploadFile({\r\n        ...fileObject,\r\n        blob,\r\n        file,\r\n      });\r\n    }\r\n  });\r\n  input.click();\r\n}\r\n\r\n/**\r\n * @param {File} file - Newly uploaded file.\r\n * @return object with file properties.\r\n *\r\n * Since we cannot iterate over the keys in the file we will manually\r\n * do it  here.\r\n */\r\nfunction createFileObject(file) {\r\n  const obj = {};\r\n  for (let key in file) {\r\n    obj[key] = file[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * @param {Object} state - file, uploadFile\r\n *\r\n * If we have a file uploaded, set the file back to {}.\r\n */\r\nfunction closeOpenedFile(state) {\r\n  const { closeFile, file } = state;\r\n  if (Object.keys(file).length > 0) {\r\n    closeFile();\r\n  }\r\n}\r\n\r\nconst fileUtils = {\r\n  openFile,\r\n  closeOpenedFile,\r\n};\r\n\r\nexport default fileUtils;\r\n","import fileUtils from \"./utils/fileUtils\";\r\n\r\nconst fileObject = {\r\n  title: \"File\", // Dropdown Text.\r\n  location: \"topNavigationDetails\", // Location so we know which others to close upon interaction.\r\n  items: [\r\n    // Items that appear when clicked.\r\n    {\r\n      label: \"Open\", // Button text.\r\n      onClick: (state) => fileUtils.openFile(state), // When we click the button.\r\n    },\r\n    {\r\n      label: \"Close\",\r\n      onClick: (state) => fileUtils.closeOpenedFile(state),\r\n    },\r\n  ],\r\n  state: {},\r\n};\r\n\r\nconst documentObject = {\r\n  title: \"Document\",\r\n  location: \"topNavigationDetails\",\r\n  items: [\r\n    {\r\n      label: \"Headers\",\r\n      onClick: (state) => state.expandModal(\"Headers\"),\r\n    },\r\n    {\r\n      label: \"Page Numbers\",\r\n      onClick: (state) => state.expandModal(\"Page Numbers\"),\r\n    },\r\n  ],\r\n  state: {},\r\n};\r\n\r\nconst localData = {\r\n  fileObject,\r\n  documentObject,\r\n};\r\n\r\nexport default localData;\r\n","/**\r\n * @param {Object} newState - Current state value and its setter.\r\n * @param {Object} obj - Data object\r\n * @returns original object with state from our App.\r\n *\r\n * Helper function just takes the current state and\r\n * the setter and combines it with our data object.\r\n */\r\n function addStateToLocalData(newState, obj) {\r\n    const { state } = obj;\r\n    obj.state = { ...state, ...newState };\r\n    return obj;\r\n  }\r\n\r\n  export default addStateToLocalData;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Components\r\nimport Dropdown from \"./Dropdown/Dropdown\";\r\n\r\n// Local Data\r\nimport localData from \"./localData\";\r\n\r\n// Actions\r\nimport actions from \"../../actions\";\r\n\r\n// Utils\r\nimport addStateToLocalData from \"./utils/addStateToLocalData\";\r\n\r\nfunction TopNavigation(props) {\r\n  // Redux Actions\r\n  const { uploadFile, closeFile, expandModal } = props;\r\n\r\n  // Redux Store Properties\r\n  const { file } = props;\r\n\r\n  // Organized State for Sub Component\r\n  const fileState = {\r\n    file,\r\n    uploadFile,\r\n    closeFile,\r\n  };\r\n\r\n  const modalState = {\r\n    expandModal,\r\n  };\r\n\r\n  // Misc\r\n  // Local Data\r\n  let { fileObject, documentObject } = localData;\r\n\r\n  fileObject = addStateToLocalData(fileState, fileObject);\r\n  documentObject = addStateToLocalData(modalState, documentObject);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }} className=\"topNavigation\">\r\n      <Dropdown data={fileObject} />\r\n      <Dropdown data={documentObject} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst { fileActions, modalsActions } = actions;\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { file, modals } = state;\r\n  return {\r\n    file,\r\n    modals,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { ...fileActions, ...modalsActions })(\r\n  TopNavigation\r\n);\r\n","// Dropdown Utility\r\nimport dropdownUtility from \"./TopNavigation/Dropdown/utils\";\r\n\r\n// Local Data\r\nimport { TIME_TO_CLOSE_DROPDOWN } from \"./localData\";\r\n\r\n/**\r\n * @param {Object} e - event object.\r\n * @param {String} openDropdown - Label of the dropdown open.\r\n * @param {Function} closeDropdown - Sets our openDropdown.\r\n *\r\n * Check if we click a label on the Dropdown menus.\r\n * Only works in the TopNavigation panel.\r\n *\r\n * If we have one open and click on the app, it closes the menus.\r\n */\r\nfunction closeTopNavigation(e, openDropdown, closeDropdown) {\r\n  const classInSearch = \"topNavigationDetails\";\r\n  const target =\r\n    e.target.tagName === \"SUMMARY\" ? e.target.parentNode : e.target;\r\n  const classList = Array.from(target.classList);\r\n  if (!classList.includes(classInSearch) && openDropdown !== \"\") {\r\n    closeDropdown();\r\n    const details = Array.from(document.querySelectorAll(`.${classInSearch}`));\r\n    dropdownUtility.closeAllDropdowns(details, TIME_TO_CLOSE_DROPDOWN);\r\n  }\r\n}\r\n\r\nconst utils = {\r\n  closeTopNavigation,\r\n};\r\n\r\nexport default utils;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\n// Components\r\nimport PDF from \"./PDF/PDF\";\r\nimport Modals from \"./Modals/Modals\";\r\nimport Loading from \"./Loading/Loading\";\r\nimport TopNavigation from \"./TopNavigation/TopNavigation\";\r\n\r\n// Utilities\r\nimport utils from \"./utils\";\r\n\r\n// Actions\r\nimport actions from \"../actions\";\r\n\r\nconst Main = styled.main`\r\n  height: 100vh;\r\n  width: auto;\r\n  position: relative;\r\n`;\r\n\r\nfunction App(props) {\r\n  // Redux Actions\r\n  const { closeDropdown } = props;\r\n\r\n  // Redux Store Properties.\r\n  const { topNavigation, file } = props;\r\n  const { openDropdown } = topNavigation;\r\n\r\n  // Misc\r\n  // Disables app when we are loading an api call.\r\n  const pointerEvents = file.loading === true ? \"none\" : \"auto\";\r\n  // There was terrible opacity when we were loading an api call.\r\n  // This ensures we only see the opac'd background.\r\n  const overflow = file.loading === true ? \"hidden\" : \"visible\";\r\n\r\n  return (\r\n    <Main\r\n      style={{\r\n        pointerEvents,\r\n        overflow,\r\n      }}\r\n      onClick={(e) => utils.closeTopNavigation(e, openDropdown, closeDropdown)}\r\n    >\r\n      <TopNavigation />\r\n      <Modals />\r\n      <PDF />\r\n      <Loading pointerEvents={pointerEvents} />\r\n    </Main>\r\n  );\r\n}\r\n\r\nconst { topNavigation } = actions;\r\nconst { closeDropdown } = topNavigation;\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { topNavigation, file } = state;\r\n  return {\r\n    topNavigation,\r\n    file,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { closeDropdown })(App);\r\n","import { fileTypes } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nfunction fileReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case fileTypes.UPLOADED_FILE:\r\n      return action.payload;\r\n    case fileTypes.CLOSED_FILE:\r\n      return action.payload;\r\n    case fileTypes.CHANGED_BLOB:\r\n      return {\r\n        ...state,\r\n        blob: action.payload,\r\n      };\r\n    case fileTypes.ENABLED_APP:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case fileTypes.DISABLED_APP:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case fileTypes.CHANGED_FILE_PATH:\r\n      return {\r\n        ...state,\r\n        filePath: action.payload,\r\n      };\r\n    case fileTypes.CHANGED_METADATA:\r\n      return {\r\n        ...state,\r\n        metadata: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default fileReducer;\r\n","const initialState = [];\r\n\r\nfunction headerReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default headerReducer;","import { topNavigationTypes } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    openDropdown: \"\",\r\n};\r\n\r\nfunction topNavigationReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case topNavigationTypes.EXPANDED_DROPDOWN:\r\n            return {\r\n                ...state,\r\n                openDropdown: action.payload\r\n            };\r\n        case topNavigationTypes.CLOSED_DROPDOWN:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default topNavigationReducer;","import { modalTypes } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  openModal: \"\",\r\n  // expansion: \"\",\r\n  // expansionData: {},\r\n};\r\n\r\nfunction modalsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case modalTypes.EXPANDED_MODAL:\r\n      return {\r\n        ...state,\r\n        openModal: action.payload,\r\n      };\r\n    case modalTypes.CLOSED_MODAL:\r\n      return {\r\n        ...initialState,\r\n      };\r\n    case modalTypes.EXPANDED_MODAL_EXPANSION:\r\n      return {\r\n        ...state,\r\n        expansion: action.payload.expansion,\r\n        expansionData: action.payload.expansionData,\r\n      };\r\n    case modalTypes.CLOSED_MODAL_EXPANSION:\r\n      return {\r\n        ...state,\r\n        expansion: \"\",\r\n        expansionData: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default modalsReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\n// Reducers\r\nimport file from \"./file\";\r\nimport headers from \"./headers\";\r\nimport topNavigation from \"./topNavigation\";\r\nimport modals from \"./modals\";\r\n\r\n/**\r\n * Hook up headers + actions to the store.\r\n * Go over the read me again for:\r\n * > Component Strucute\r\n * > File Stucture\r\n *\r\n * Make sure file names are correct.\r\n * Try and clean  up files. Probably not possible with redux.\r\n */\r\n\r\nconst rootReducer = combineReducers({\r\n  file,\r\n  modals,\r\n  headers,\r\n  topNavigation,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport \"xp.css/dist/XP.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// Components\r\nimport App from \"./components/App\";\r\n\r\n// Reducers\r\nimport rootReducer from \"./rootReducer\";\r\n\r\n// Are we using expansion stuff in the redux state?\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}